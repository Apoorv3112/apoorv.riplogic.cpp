//currently prints vertically
#include<iostream>
#include<ctype.h>
#include<stdio.h>
#include<conio.h>
#include<windows.h>
using namespace std;
void gotoxy(short int x, int y)
{
  static HANDLE h = NULL;
  if(!h)
    h = GetStdHandle(STD_OUTPUT_HANDLE);
  COORD c = { x, y };
  SetConsoleCursorPosition(h,c);
}
char a[9][25]={
"      ####      ",
"     ##  ##     ",
"    ##    ##    ",
"   ##      ##   ",
"  ############  ",
" ###        ### ",
"###          ###"};

char b[9][25]={
"###########  ",
"##        ## ",
"##       ##  ",
"##########   ",
"##       ##  ",
"##        ## ",
"###########  "};

char c[9][25]={
"   ###########",
"  ##          ",
" ##           ",
"##            ",
" ##           ",
"  ##          ",
"   ###########"};

char d[9][25]={
"############   ",
"##         ##  ",
"##          ## ",
"##           ##",
"##           ##",
"##          ## ",
"##         ##  ",
"############   "};

char e[9][25]={
"########### ",
"##          ",
"##          ",
"########### ",
"##          ",
"##          ",
"########### "};

char f[9][25]={

"#############",
"##           ",
"##           ",
"##########   ",
"##           ",
"##           ",
"##           ",
"##           "};

char g[9][25]={
" #############  ",
"##              ",
"##              ",
"##              ",
"##        ######",
"##           ## ",
"##          ##  ",
" ############   "};

char h[9][25]={
"##        ## ",
"##        ## ",
"##        ## ",
"############ ",
"##        ## ",
"##        ## ",
"##        ## "};

char i[9][25]={
"##",
"##",
"##",
"##",
"##",
"##",
"##",
"##"};

char j[9][25]={
"          #### ",
"            ## ",
"            ## ",
"            ## ",
"            ## ",
"            ## ",
"   ##       ## ",
"    #########  "};

char k[9][25]={
"  ##      ### ",
"  ##    ###   ",
"  ##  ###     ",
"  ######      ",
"  ######      ",
"  ##  ###     ",
"  ##    ###   ",
"  ##      ### "};

char l[9][25]={
"##           ",
"##           ",
"##           ",
"##           ",
"##           ",
"##           ",
"##           ",
"#############"};

char m[9][25]={
"####            #### ",
"## ###        ### ## ",
"##  ###      ###  ## ",
"##   ###    ###   ## ",
"##    ###  ###    ## ",
"##     ######     ## ",
"##      ####      ## ",
"##                ## "};

char n[9][25]={
"####       ## ",
"## ##      ## ",
"##  ##     ## ",
"##   ##    ## ",
"##    ##   ## ",
"##     ##  ## ",
"##      ## ## ",
"##       #### "};

char o[9][25]={
"############# ",
"##         ## ",
"##         ## ",
"##         ## ",
"##         ## ",
"##         ## ",
"##         ## ",
"############# "};

char p[9][25]={
"###########   ",
"##        ##  ",
"##         ## ",
"##        ##  ",
"###########   ",
"##            ",
"##            ",
"##            "};

char q[9][25]={
" ###########  ",
"##         ## ",
"##         ## ",
"##         ## ",
"##         ## ",
"##     ##  ## ",
"##     ### ## ",
" ###########  ",
"           ## "};

char r[9][25]={
"###########   ",
"##        ##  ",
"##         ## ",
"##        ##  ",
"###########   ",
"##       ##   ",
"##        ##  ",
"##         ## "};

char s[9][25]={
" #############   ",
"####        #### ",
"  ####           ",
"     ####        ",
"       ####      ",
"          ####   ",
"####        #### ",
"  ####    ####   ",
"   #########     "};

char t[9][25]={
" ################# ",
"       ####        ",
"        ##         ",
"        ##         ",
"        ##         ",
"        ##         ",
"        ##         ",
"        ##         "};

char u[9][25]={
"##           ## ",
"##           ## ",
"##           ## ",
"##           ## ",
"##           ## ",
"##           ## ",
" ##         ##  ",
"  ###########   "};

char v[9][25]={
"##             ## ",
" ##           ##  ",
"  ##         ##   ",
"   ##       ##    ",
"    ##     ##     ",
"     ##   ##      ",
"      ## ##       ",
"       ###        "};

char x[9][25]={
" ##       ## ",
"  ##     ##  ",
"   ##   ##   ",
"    ## ##    ",
"     ###     ",
"    ## ##    ",
"   ##   ##   ",
"  ##     ##  ",
" ##       ## "};

char y[9][25]={
" ##             ## ",
"   ##         ##   ",
"     ##     ##     ",
"       ## ##       ",
"        ##         ",
"        ##         ",
"        ##         ",
"        ##         ",
"        ##         "};

char z[9][25]={
" #############  ",
"           ###  ",
"          ###   ",
"        ###     ",
"      ###       ",
"    ###         ",
"  ###           ",
" ############## "};

int space()
{
  cout<<"\r"
        "\r"
        "\r"
        "\r"
        "\r"
        "\r"
        "\r"
        "\r"
        "\r";
        cout<<"\n";
        return 0;
}
int cursoreturn()
{
  gotoxy(0,0);
  gotoxy(17,0);
}
int main()
{

  char print[40];
  here:
  gets(print);
  gotoxy(0,2);
   for(int a1 = 0; print[a1] !='\0';a1++)
   {
     if(print[a1] == 'a' || print[a1] == 'A'){for(int a6=0;a6<10;a6++){cout<<a[a6]<<"\n";}}
     if(print[a1] == 'b' || print[a1] == 'B'){for(int a6=0;a6<10;a6++){cout<<b[a6]<<"\n";}}
     if(print[a1] == 'c' || print[a1] == 'C'){for(int a6=0;a6<10;a6++){cout<<c[a6]<<"\n";}}
     if(print[a1] == 'd' || print[a1] == 'D'){for(int a6=0;a6<10;a6++){cout<<d[a6]<<"\n";}}
     if(print[a1] == 'e' || print[a1] == 'E'){for(int a6=0;a6<10;a6++){cout<<e[a6]<<"\n";}}
     if(print[a1] == 'f' || print[a1] == 'F'){for(int a6=0;a6<10;a6++){cout<<f[a6]<<"\n";}}
     if(print[a1] == 'g' || print[a1] == 'G'){for(int a6=0;a6<10;a6++){cout<<g[a6]<<"\n";}}
     if(print[a1] == 'h' || print[a1] == 'H'){for(int a6=0;a6<10;a6++){cout<<h[a6]<<"\n";}}
     if(print[a1] == 'i' || print[a1] == 'I'){for(int a6=0;a6<10;a6++){cout<<i[a6]<<"\n";}}
     if(print[a1] == 'j' || print[a1] == 'J'){for(int a6=0;a6<10;a6++){cout<<j[a6]<<"\n";}}
     if(print[a1] == 'k' || print[a1] == 'K'){for(int a6=0;a6<10;a6++){cout<<k[a6]<<"\n";}}
     if(print[a1] == 'l' || print[a1] == 'L'){for(int a6=0;a6<10;a6++){cout<<l[a6]<<"\n";}}
     if(print[a1] == 'm' || print[a1] == 'M'){for(int a6=0;a6<10;a6++){cout<<m[a6]<<"\n";}}
     if(print[a1] == 'n' || print[a1] == 'N'){for(int a6=0;a6<10;a6++){cout<<n[a6]<<"\n";}}
     if(print[a1] == 'o' || print[a1] == 'O'){for(int a6=0;a6<10;a6++){cout<<o[a6]<<"\n";}}
     if(print[a1] == 'p' || print[a1] == 'P'){for(int a6=0;a6<10;a6++){cout<<p[a6]<<"\n";}}
     if(print[a1] == 'q' || print[a1] == 'Q'){for(int a6=0;a6<10;a6++){cout<<q[a6]<<"\n";}}
     if(print[a1] == 'r' || print[a1] == 'R'){for(int a6=0;a6<10;a6++){cout<<r[a6]<<"\n";}}
     if(print[a1] == 's' || print[a1] == 'S'){for(int a6=0;a6<10;a6++){cout<<s[a6]<<"\n";}}
     if(print[a1] == 't' || print[a1] == 'T'){for(int a6=0;a6<10;a6++){cout<<t[a6]<<"\n";}}
     if(print[a1] == 'u' || print[a1] == 'U'){for(int a6=0;a6<10;a6++){cout<<u[a6]<<"\n";}}
     if(print[a1] == 'v' || print[a1] == 'V'){for(int a6=0;a6<10;a6++){cout<<v[a6]<<"\n";}}
     if(print[a1] == 'x' || print[a1] == 'X'){for(int a6=0;a6<10;a6++){cout<<x[a6]<<"\n";}}
     if(print[a1] == 'y' || print[a1] == 'Y'){for(int a6=0;a6<10;a6++){cout<<y[a6]<<"\n";}}
     if(print[a1] == 'z' || print[a1] == 'Z'){for(int a6=0;a6<10;a6++){cout<<z[a6]<<"\n";}}
     if(print[a1] == '\0'){space();}
   }

}
